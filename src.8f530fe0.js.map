{"version":3,"sources":["js/base/refs.js","js/fetch/fetchApiWeek.js","js/base/firstPageLoading.js","js/listeners/onHome.js","js/listeners/onLibrary.js","js/fetch/fetchApiSearch.js","js/listeners/onSearchMovie.js","js/listeners/onHero.js","js/listeners/onWatched.js","js/listeners/onQueue.js","js/listeners/onTeamModal.js","js/base/eventListeners.js","index.js"],"names":["refs","home","document","querySelector","library","searchMovie","hero","BASE_URL","API_KEY","fetchApiWeek","fetch","then","r","json","catch","data","firstPageLoading","arrMovie","results","map","poster_path","title","release_date","genre_ids","join","insertAdjacentHTML","onHome","evt","console","log","onLibrary","innerHTML","target","fetchApiSearch","query","onSearchMovie","e","preventDefault","value","trim","alert","onHero","dir","onWatched","onQueue","onTeamModal","eventListeners","watched","queue","nIceTeam","addEventListener","start"],"mappings":"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","file":"src.8f530fe0.js","sourceRoot":"../src","sourcesContent":["export const refs = {\n  home: document.querySelector('.home'),\n  library: document.querySelector('.library'),\n  searchMovie: document.querySelector('.search-film-form'),\n  // watched: document.querySelector('.watched'),\n  // queue: document.querySelector('.queue'),\n  hero: document.querySelector('.hero'),\n  // nIceTeam: document.querySelector('.team-modal-btn'),\n\n  // addToWatch: document.querySelector('.addToWatch'),\n  // addToQueue: document.querySelector('addToQueue'),\n};\n","const BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'e2b1fd67e69bae9f083d3c611e2b6f41';\n\nexport default function fetchApiWeek() {\n  return fetch(`${BASE_URL}/3/trending/movie/week?api_key=${API_KEY}`)\n    .then(r => r.json())\n    .catch(data => data);\n}\n","import { refs } from '../base/refs';\nimport fetchApiWeek from '../fetch/fetchApiWeek';\n\nexport default function firstPageLoading() {\n  fetchApiWeek().then(data => {\n    const arrMovie = data.results\n\n      /* И ВОООБЩЕ ЭТО ПОВТОРЯЮЩАЯСЯ ФУНЦИЯ ПОЛУЧАЕТСЯ */\n\n      .map(({ poster_path, title, release_date, genre_ids }) => {\n        /* ТУТ ДОЛЖНА БЫТЬ ФУНКЦИЯ КОТОРАЯ ОБРЕЗАЕТ ДАТУ */\n\n        /* ТУТ ДОЛЖНА БЫТЬ ФУНКЦИЯ КОТОРАЯ ПРЕВРАЩАЕТ ЦИФРЫ В ЖАНРЫ */\n\n        /* ТУТ В МЕСТО РЕТЮРНА ДОЛЖЕН БЫТЬ ШАБЛОНИЗАТОР */\n        return `<div>\n            <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${title}\" width=250; />\n            <h2>${title}</h2>\n            <p>${genre_ids} <span>${release_date}</span></p>\n             </div>`;\n      })\n      .join('');\n    refs.hero.insertAdjacentHTML('beforeend', arrMovie);\n    return data;\n  });\n}\n","// import { refs } from '../base/refs';\nimport firstPageLoading from '../base/firstPageLoading';\n\nexport default function onHome(evt) {\n  firstPageLoading();\n\n  console.log('я дома');\n}\n","import { refs } from '../base/refs';\n\nexport default function onLibrary(evt) {\n  refs.hero.innerHTML = '';\n  console.log(`click on Library ${evt.target}`);\n  return;\n}\n","const BASE_URL = 'https://api.themoviedb.org';\nconst API_KEY = 'e2b1fd67e69bae9f083d3c611e2b6f41';\n\nexport default function fetchApiSearch(query) {\n  return fetch(`${BASE_URL}/3/search/movie?api_key=${API_KEY}&query=${query}`)\n    .then(r => r.json())\n    .catch(data => data);\n}\n","import { refs } from '../base/refs';\nimport fetchApiSearch from '../fetch/fetchApiSearch';\n\nexport default function onSearchMovie(e) {\n  e.preventDefault();\n\n  const query = e.target[0].value.trim();\n  if (!query) {\n    alert('вы ввели пустую строку!');\n    return;\n  }\n  refs.hero.innerHTML = '';\n\n  fetchApiSearch(query).then(data => {\n    const arrMovie = data.results\n      /* И ВОООБЩЕ ЭТО ПОВТОРЯЮЩАЯСЯ ФУНЦИЯ ПОЛУЧАЕТСЯ */\n      .map(({ poster_path, title, release_date, genre_ids }) => {\n        /* ТУТ ДОЛЖНА БЫТЬ ФУНКЦИЯ КОТОРАЯ ОБРЕЗАЕТ ДАТУ */\n\n        /* ТУТ ДОЛЖНА БЫТЬ ФУНКЦИЯ КОТОРАЯ ПРЕВРАЩАЕТ ЦИФРЫ В ЖАНРЫ */\n\n        /* ТУТ В МЕСТО РЕТЮРНА ДОЛЖЕН БЫТЬ ШАБЛОНИЗАТОР */\n        return `<div>\n            <img src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"${title}\" width=250; />\n            <h2>${title}</h2>\n            <p>${genre_ids} <span>${release_date}</span></p>\n             </div>`;\n      })\n      .join('');\n    refs.hero.insertAdjacentHTML('beforeend', arrMovie);\n    return data;\n  });\n}\n","export default function onHero(e) {\n  console.dir(e);\n\n  return;\n}\n","export default function onWatched(evt) {\n    console.log(`click on Watched ${evt.target}`);\n    return;\n}","export default function onQueue(evt) {\n    console.log(`click on Queue ${evt.target}`);\n    return;\n}","export default function onTeamModal(evt) {\n    console.log(`click on TeamModal ${evt.target}`);\n    return;\n}","import onHome from '../listeners/onHome';\nimport onLibrary from '../listeners/onLibrary';\nimport onSearchMovie from '../listeners/onSearchMovie';\nimport onHero from '../listeners/onHero';\nimport onWatched from '../listeners/onWatched';\nimport onQueue from '../listeners/onQueue';\nimport onTeamModal from '../listeners/onTeamModal';\n\nexport default function eventListeners(refs) {\n  const { home, library, searchMovie, hero, watched, queue, nIceTeam } = refs;\n  home.addEventListener('click', onHome);\n  library.addEventListener('click', onLibrary);\n  searchMovie.addEventListener('submit', onSearchMovie);\n  // hero.addEventListener('click', onHero);\n  //   watched.addEventListener('click', onWatched);\n  //   queue.addEventListener('click', onQueue);\n  hero.addEventListener('click', onHero);\n  //   nIceTeam.addEventListener('click', onTeamModal);\n  console.log('Hello World');\n}\n","import './sass/main.scss';\nimport { refs } from './js/base/refs';\nimport eventListener from './js/base/eventListeners';\nimport firstPageLoading from './js/base/firstPageLoading';\n// import request from './js/base/request';\n\nfunction start() {\n  firstPageLoading();\n  eventListener(refs);\n}\n\nstart();\n// request()\n//   .then(data => console.log(data));\n"]}